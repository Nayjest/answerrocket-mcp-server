name: main build and publish workflow

on: push

jobs:

  build:
    name: Build distribution
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
        retention-days: 30

  build-dxt:
    name: Build DXT extension
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'

    - name: Check tag matches manifest.json version
      run: |
        TAG_VERSION="${GITHUB_REF##*/}"
        TAG_VERSION_NO_PREFIX="${TAG_VERSION#v}"
        echo "Tag version: $TAG_VERSION (stripped: $TAG_VERSION_NO_PREFIX)"
        MANIFEST_VERSION=$(jq -r .version manifest.json)
        echo "manifest.json version: $MANIFEST_VERSION"
        if [ "$TAG_VERSION_NO_PREFIX" != "$MANIFEST_VERSION" ]; then
          echo "Tag version ($TAG_VERSION_NO_PREFIX) does not match manifest.json version ($MANIFEST_VERSION)" >&2
          exit 1
        fi
      shell: bash

    - name: Install DXT toolchain
      run: npm install -g @anthropic-ai/dxt

    - name: Pack extension
      run: dxt pack

    - name: Upload DXT artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dxt-dist
        path: '*.dxt'

  publish-to-pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build
    environment:
      name: pypi
      url: https://pypi.org/p/maxai-mcp
    permissions:
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1